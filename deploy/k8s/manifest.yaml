---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-nfs-coen-backups
  labels:
    app.kubernetes.io/name: backup-to-cloud
    app.kubernetes.io/component: cronjob
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: backup-to-cloud
spec:
  storageClassName: "freenas-nfs-manual-csi"
  capacity:
    storage: 30Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  mountOptions:
    - nfsvers=4
    - nolock
    - noatime
  csi:
    driver: org.democratic-csi.node-manual
    readOnly: false
    fsType: nfs
    volumeHandle: pv-nfs-coen-backups
    volumeAttributes:
      server: storage-server-lagg.lan
      share: /mnt/r10_8tb/coen/backups-test
      node_attach_driver: nfs
      provisioner_driver: node-manual

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pvc-nfs-coen-backups
  namespace: tools
  labels:
    app.kubernetes.io/name: backup-to-cloud
    app.kubernetes.io/component: cronjob
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: backup-to-cloud
  annotations:
    volume.beta.kubernetes.io/storage-class: "freenas-nfs-manual-csi"
spec:
  storageClassName: freenas-nfs-manual-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
  volumeName: pv-nfs-coen-backups

---
kind: SealedSecret
apiVersion: bitnami.com/v1alpha1
metadata:
  name: backup-to-cloud-secret-env
  namespace: tools
spec:
  encryptedData:
    DROPBOX_ACCESS_TOKEN: AgDEmeg1G/nKm7THgO4oV0TRp7lFxmU5DKxfioFLbJJ9NORqMOeoYd0AL4+PixOKuVJIWCNUp/nzzc7LcE8DZ/c1jXwy/T9f+NBJp46KGXttfsQaUFYHEdJyDlwRZCRjZQG7KcK0aogn5IZiJuNSRiA8jde5B8eD85uke0Fyaew3jIV72w1mJjYUYeUwa1Kr4iVVHx36Iz5mPt6jqWg3YZxSrS7OC6jlNDiBof8yMqFZDsyZChUn26dhSNczZeRUSBDelhnm9N98xh2G1kirpB2/jK9Aur7OmpHOHckLSUlecKgFZECa7M5rYS3zaBeU0ELt1Gt/4NjkzIk1W0z9JjkVcOfK3dhHK6gK08pm2vUjA3XyPDj/N0xjDU28wC+gn+Ody/JENbt/1EylfxqPFE7anEFLZgiJQ0bbTPhiQIas7OkXUMOgXjK+u3FkY/iKty3hsEyfFC3r8Vve/DL0YHUzAC+cvkwQM/47pVxFmY2fG5BH/V9C/7VDMahrne9euySu6NtFRFYK+32n/KEVu/jrhoOzthiD2yjt5yvt8WiT5/YNVi1U/DLDEth9r0nOt10TKJXQnG5673seFWuoN+iT/ooaNFy9hnVw/2M/UzX0N1I/mTmNoBQFicSmZt0AcWP6ipeGGVjRMKDyP+MRcLHDEZpFglyktcPD/CQ8rsVYiDXD18uWQP0QJXv/96P1VklL5dOR4ZI4d+Cowb1T4FKo22CmCEVXSGnxsEYWaNwZg6UtaY4ThBoGeQ2JYY7Jf2Y96oIKDdCK6v9b1YeJyLmJtN5+Rqx/KneZr9zunFCgutZ9qIIRKSm3WD7t+1pQY4f+cjXaquTnfQqnm+2QnwZ5bwLP3PGv3v5DCAtfr4rVgkN0WkHwy11/kx4y
  template:
    type: Opaque
    metadata:
      name: backup-to-cloud-secret-env
      namespace: tools
      labels:
        app.kubernetes.io/component: cronjob
        app.kubernetes.io/instance: production
        app.kubernetes.io/name: backup-to-cloud
        app.kubernetes.io/part-of: backup-to-cloud

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: backup-to-cloud-env
  namespace: tools
  labels:
    app.kubernetes.io/name: backup-to-cloud
    app.kubernetes.io/component: cronjob
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: backup-to-cloud
data:
  TZ: "Europe/Amsterdam"
  BACKUP_DIRECTORY: "/backups"
  GPG_RECIPIENT: "gpg@theautomation.nl"
  DROPBOX_REMOTE_LOCATION: ""
  DEBUG: "false"
  LOG_FILE_LOCATION: ""

---
kind: Job
apiVersion: batch/v1
metadata:
  name: backup-to-cloud
  namespace: tools
  labels:
    app.kubernetes.io/name: backup-to-cloud
    app.kubernetes.io/component: cronjob
    app.kubernetes.io/instance: production
    app.kubernetes.io/part-of: backup-to-cloud
spec:
  template:
    spec:
      securityContext:
        fsGroup: 2000
      containers:
        - name: backup-to-cloud
          image: "harbor.k8s.lan/k8s/backup-to-cloud:23"
          securityContext:
            runAsUser: 1000
            runAsGroup: 2000
          imagePullPolicy: Always
          command:
            - "/app/script.sh"
          volumeMounts:
            - name: backups
              mountPath: /backups
          envFrom:
            - configMapRef:
                name: backup-to-cloud-env
                optional: false
            - secretRef:
                name: backup-to-cloud-secret-env
                optional: false
      restartPolicy: OnFailure
      imagePullSecrets:
        - name: harbor-registry-creds
      volumes:
        - name: backups
          persistentVolumeClaim:
            claimName: pvc-nfs-coen-backups
